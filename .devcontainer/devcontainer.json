// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.155.1/containers/docker-existing-dockerfile
{
	"name": "Blood Pressure Recognition",

	// Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
	"build": {
		"context": "..",
		"dockerfile": "../Dockerfile"
	},

	"runArgs": [
		"--gpus", "all",
		"--net", "host",
		"-e", "DISPLAY=${env:DISPLAY}",
		"-v", "/tmp/.X11-unix:/tmp/.X11-unix",
		"--name", "blood-pressure-recognition"
	],

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"nvidia.nsight-vscode-edition",
		"mikestead.dotenv",
		"njpwerner.autodocstring",
		"ms-python.python",
		"ms-vscode-remote.remote-containers",
		"streetsidesoftware.code-spell-checker",
		"ms-azuretools.vscode-docker",
		"kevinrose.vsc-python-indent",
		"donjayamanne.python-environment-manager"
	]

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Uncomment the next line to run commands after the container is created - for example installing curl.
	// "postCreateCommand": "apt-get update && apt-get install -y curl",

	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	// "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],

	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
	// "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],

	// Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
	// "remoteUser": "vscode"
}
